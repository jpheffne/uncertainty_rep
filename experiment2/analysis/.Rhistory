knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# Libraries
library(here)         # relative paths
library(janitor)
library(tidyverse)    # tidy functions
library(knitr)        # knit functions
library(kableExtra)   # extra markdown functions
library(ggrepel)      # geom_text_repel
library(gridExtra)    # aesthetics
library(purrr)        # map functions
library(rjson)        # json reader
library(jsonlite)     # json reader
library(abind)        # abind
library(multiway)     # INDSCAL
# Relative paths
dir_parent <- here()
dir_clean <- str_c(dir_parent, "/study1/data/clean")
dir_graphs <- str_c(dir_parent, "/study1/graphs")
# Data
df_indiv_measures <- read_csv(str_c(dir_clean, "/individual_measures.csv"))
df_darm <- read_csv(str_c(dir_clean, "/darm_uncertainty.csv"))
df_gambles <- read_csv(str_c(dir_clean, "/gambles.csv"))
df_internal_external <- read_csv(str_c(dir_clean, "/internal_external.csv"))
df_spam <- read_csv(str_c(dir_clean, "/meadows_spam_simple.csv"))
spam_list <- readRDS(str_c(dir_clean, "/meadows_spam.rds"))
df_prob <- read_csv(str_c(dir_clean, "/probability.csv"))
df_gamble_ids <- read_csv(str_c(dir_clean, "/gamble_ids.csv")) %>%
mutate(A_risky = if_else(A_p2 == 0, "certain", "risky"),
B_risky = if_else(B_p2 == 0, "certain", "risky"))
# Model fits
df_fits <- read_csv(str_c(dir_clean, "/study1_pt_fits.csv")) %>% select(-`...1`) # REMEMBER to replace this once done
df_fits_hier <- read_csv(str_c(dir_clean, "/study1_pt_fits_hier.csv")) %>% select(-`...1`) # REMEMBER to replace this once done
df_gamble_exclude <- df_gambles %>%
filter(gamble == 91) %>%
select(sub, choice_fct) %>%
mutate(gamble_check = case_when(choice_fct == "A" ~ "failed",
choice_fct == "B" ~ "passed"))
df_exclude <- df_indiv_measures %>%
select(sub:bonus_check_2) %>%
left_join(., df_gamble_exclude %>% select(sub, gamble_check), by = "sub") %>%
mutate(exclude = if_else(darm_check == "passed" & in_ex_check == "passed" & bonus_check_1 == "passed" & bonus_check_2 == "passed" & gamble_check == "passed", "keep", "exclude")) %>%
select(sub, exclude)
# Save gamble data with only correct subjects included
df_gamble_keep <- df_gambles %>%
left_join(., df_exclude, by = "sub") %>%
filter(exclude == "keep") %>%
select(-exclude)
View(df_spam)
View(spam_list)
cor(spam_list$spam_matrix[1], spam_list$spam_matrix[2])
cor(c(spam_list$spam_matrix[1]), c(spam_list$spam_matrix[2]))
c(spam_list$spam_matrix[1])
sub8 <- df_spam %>% filter(sub == 8)
sub8
sub8 <- df_spam %>% filter(sub == 8) %>% pull(rdm_values)
df_spam
unique(df_spam$sub)
sub25 <- df_spam %>% filter(sub == 25) %>% pull(rdm_values)
cor(sub8, sub25)
sub8
sub25
View(df_spam)
# Loop through subjects
num_sub <- df_spam %>% select(sub) %>% unique() %>% length()
num_sub
# Loop through subjects
num_sub <- df_spam %>% select(sub) %>% unique() %>% nrow()
num_sub
for (i in 1:num_sub) {
print(i)
}
View(spam_list)
spam_list$spam_matrix[[1]]
class(spam_list$spam_matrix[[1]])
View(df_spam)
ggplot(df_spam %>% filter(sub == 8), aes(x = uncertain1, y = uncertain2)) +
geom_tile(z = rdm_values) +
theme_classic()
df_spam
ggplot(df_spam %>% filter(sub == 8), aes(x = uncertain1, y = uncertain2)) +
geom_tile(aes(z = rdm_values)) +
theme_classic()
ggplot(df_spam %>% filter(sub == 8), aes(x = uncertain1, y = uncertain2)) +
geom_tile(aes(fill = rdm_values)) +
theme_classic()
ggplot(df_spam %>% filter(sub == 8), aes(x = uncertain1, y = uncertain2)) +
geom_tile(aes(fill = rdm_values)) +
theme_classic()
a <- ggplot(df_spam %>% filter(sub == 8), aes(x = uncertain1, y = uncertain2)) +
geom_tile(aes(fill = rdm_values)) +
theme_classic()
b <- ggplot(df_spam %>% filter(sub == 25), aes(x = uncertain1, y = uncertain2)) +
geom_tile(aes(fill = rdm_values)) +
theme_classic()
fig <- cowplot::plot_grid(a, b)
fig
fig
df_spam
View(df_spam)
sub8 <- df_spam %>% filter(sub == 8) %>% pull(rdm_values)
sub25 <- df_spam %>% filter(sub == 1) %>% pull(rdm_values)
cor(sub8, sub25)
a <- ggplot(df_spam %>% filter(sub == 8), aes(x = uncertain1, y = uncertain2)) +
geom_tile(aes(fill = rdm_values)) +
theme_classic()
b <- ggplot(df_spam %>% filter(sub == 25), aes(x = uncertain1, y = uncertain2)) +
geom_tile(aes(fill = rdm_values)) +
theme_classic()
fig <- cowplot::plot_grid(a, b)
fig
fig
View(spam_list[[4]][[1]])
knitr::opts_chunk$set(echo = FALSE, warnings = FALSE, message = FALSE)
# Libraries
library(here)         # relative paths
library(janitor)
library(tidyverse)    # tidy functions
library(knitr)        # knit functions
library(kableExtra)   # extra markdown functions
library(ggrepel)      # geom_text_repel
library(gridExtra)    # aesthetics
library(purrr)        # map functions
library(rjson)        # json reader
library(jsonlite)     # json reader
library(abind)        # abind
library(multiway)     # INDSCAL
# Relative paths
dir_parent <- here()
dir_clean <- str_c(dir_parent, "/study1/data/clean")
dir_graphs <- str_c(dir_parent, "/study1/graphs")
# Data
df_indiv_measures <- read_csv(str_c(dir_clean, "/individual_measures.csv"))
df_darm <- read_csv(str_c(dir_clean, "/darm_uncertainty.csv"))
df_gambles <- read_csv(str_c(dir_clean, "/gambles.csv"))
df_internal_external <- read_csv(str_c(dir_clean, "/internal_external.csv"))
df_spam <- read_csv(str_c(dir_clean, "/meadows_spam_simple.csv"))
spam_list <- readRDS(str_c(dir_clean, "/meadows_spam.rds"))
df_prob <- read_csv(str_c(dir_clean, "/probability.csv"))
df_gamble_ids <- read_csv(str_c(dir_clean, "/gamble_ids.csv")) %>%
mutate(A_risky = if_else(A_p2 == 0, "certain", "risky"),
B_risky = if_else(B_p2 == 0, "certain", "risky"))
# Model fits
df_fits <- read_csv(str_c(dir_clean, "/study1_pt_fits.csv")) %>% select(-`...1`) # REMEMBER to replace this once done
df_fits_hier <- read_csv(str_c(dir_clean, "/study1_pt_fits_hier.csv")) %>% select(-`...1`) # REMEMBER to replace this once done
df_gamble_exclude <- df_gambles %>%
filter(gamble == 91) %>%
select(sub, choice_fct) %>%
mutate(gamble_check = case_when(choice_fct == "A" ~ "failed",
choice_fct == "B" ~ "passed"))
df_exclude <- df_indiv_measures %>%
select(sub:bonus_check_2) %>%
left_join(., df_gamble_exclude %>% select(sub, gamble_check), by = "sub") %>%
mutate(exclude = if_else(darm_check == "passed" & in_ex_check == "passed" & bonus_check_1 == "passed" & bonus_check_2 == "passed" & gamble_check == "passed", "keep", "exclude")) %>%
select(sub, exclude)
# Save gamble data with only correct subjects included
df_gamble_keep <- df_gambles %>%
left_join(., df_exclude, by = "sub") %>%
filter(exclude == "keep") %>%
select(-exclude)
write_csv(x = df_gamble_keep, path = str_c(dir_clean, "/gambles_criteria.csv"))
write_csv(x = df_gamble_keep, file = str_c(dir_clean, "/gambles_criteria.csv"))
